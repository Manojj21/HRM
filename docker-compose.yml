version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hrm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hrm_database
      POSTGRES_USER: hrm_user
      POSTGRES_PASSWORD: hrm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hrm_user -d hrm_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  # HRM Application
  hrm-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: hrm-application
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://hrm_user:hrm_password@postgres:5432/hrm_database
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: hrm_user
      PGPASSWORD: hrm_password
      PGDATABASE: hrm_database
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local